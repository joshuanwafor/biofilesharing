/* tslint:disable */
/* eslint-disable */
/**
 * tollgator-core
 * Full api description goes here
 *
 * The version of the OpenAPI document: 1.0
 * Contact: joshuanwafor01@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserPaystackBankIntegration
 */
export interface UserPaystackBankIntegration {
    /**
     * 
     * @type {string}
     * @memberof UserPaystackBankIntegration
     */
    businessName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserPaystackBankIntegration
     */
    accountNumber?: string;
    /**
     * 
     * @type {number}
     * @memberof UserPaystackBankIntegration
     */
    percentageCharge?: number;
    /**
     * 
     * @type {number}
     * @memberof UserPaystackBankIntegration
     */
    settlementBank?: number;
    /**
     * 
     * @type {string}
     * @memberof UserPaystackBankIntegration
     */
    currency?: string;
    /**
     * 
     * @type {string}
     * @memberof UserPaystackBankIntegration
     */
    bank?: string;
    /**
     * 
     * @type {string}
     * @memberof UserPaystackBankIntegration
     */
    integration?: string;
    /**
     * 
     * @type {string}
     * @memberof UserPaystackBankIntegration
     */
    domain?: string;
    /**
     * 
     * @type {string}
     * @memberof UserPaystackBankIntegration
     */
    subaccountCode?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserPaystackBankIntegration
     */
    isVerified?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserPaystackBankIntegration
     */
    settlementSchedule?: string;
    /**
     * 
     * @type {string}
     * @memberof UserPaystackBankIntegration
     */
    active?: string;
    /**
     * 
     * @type {string}
     * @memberof UserPaystackBankIntegration
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof UserPaystackBankIntegration
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof UserPaystackBankIntegration
     */
    updatedAt?: string;
}

export function UserPaystackBankIntegrationFromJSON(json: any): UserPaystackBankIntegration {
    return UserPaystackBankIntegrationFromJSONTyped(json, false);
}

export function UserPaystackBankIntegrationFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPaystackBankIntegration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'businessName': !exists(json, 'business_name') ? undefined : json['business_name'],
        'accountNumber': !exists(json, 'account_number') ? undefined : json['account_number'],
        'percentageCharge': !exists(json, 'percentage_charge') ? undefined : json['percentage_charge'],
        'settlementBank': !exists(json, 'settlement_bank') ? undefined : json['settlement_bank'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'bank': !exists(json, 'bank') ? undefined : json['bank'],
        'integration': !exists(json, 'integration') ? undefined : json['integration'],
        'domain': !exists(json, 'domain') ? undefined : json['domain'],
        'subaccountCode': !exists(json, 'subaccount_code') ? undefined : json['subaccount_code'],
        'isVerified': !exists(json, 'is_verified') ? undefined : json['is_verified'],
        'settlementSchedule': !exists(json, 'settlement_schedule') ? undefined : json['settlement_schedule'],
        'active': !exists(json, 'active') ? undefined : json['active'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
    };
}

export function UserPaystackBankIntegrationToJSON(value?: UserPaystackBankIntegration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'business_name': value.businessName,
        'account_number': value.accountNumber,
        'percentage_charge': value.percentageCharge,
        'settlement_bank': value.settlementBank,
        'currency': value.currency,
        'bank': value.bank,
        'integration': value.integration,
        'domain': value.domain,
        'subaccount_code': value.subaccountCode,
        'is_verified': value.isVerified,
        'settlement_schedule': value.settlementSchedule,
        'active': value.active,
        'id': value.id,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
    };
}

