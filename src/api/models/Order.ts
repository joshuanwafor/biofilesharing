/* tslint:disable */
/* eslint-disable */
/**
 * tollgator-core
 * Full api description goes here
 *
 * The version of the OpenAPI document: 1.0
 * Contact: joshuanwafor01@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Order
 */
export interface Order {
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    orderType?: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    amount?: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    voucherId?: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    providerId?: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    publisherId?: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    userNote?: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    serviceId?: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    updatedAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    providerStatus?: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    ?: string;
}

export function OrderFromJSON(json: any): Order {
    return OrderFromJSONTyped(json, false);
}

export function OrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Order {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'orderType': !exists(json, 'order_type') ? undefined : json['order_type'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'voucherId': !exists(json, 'voucher_id') ? undefined : json['voucher_id'],
        'providerId': !exists(json, 'provider_id') ? undefined : json['provider_id'],
        'publisherId': !exists(json, 'publisher_id') ? undefined : json['publisher_id'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'userNote': !exists(json, 'user_note') ? undefined : json['user_note'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'serviceId': !exists(json, 'service_id') ? undefined : json['service_id'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'providerStatus': !exists(json, 'provider_status') ? undefined : json['provider_status'],
        '': !exists(json, '') ? undefined : json[''],
    };
}

export function OrderToJSON(value?: Order | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'order_type': value.orderType,
        'amount': value.amount,
        'voucher_id': value.voucherId,
        'provider_id': value.providerId,
        'publisher_id': value.publisherId,
        'status': value.status,
        'user_note': value.userNote,
        'description': value.description,
        'service_id': value.serviceId,
        'updated_at': value.updatedAt,
        'created_at': value.createdAt,
        'provider_status': value.providerStatus,
        '': value.,
    };
}

