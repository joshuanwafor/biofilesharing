/* tslint:disable */
/* eslint-disable */
/**
 * tollgator-core
 * Full api description goes here
 *
 * The version of the OpenAPI document: 1.0
 * Contact: joshuanwafor01@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Product
 */
export interface Product {
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    publisherId?: string;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    updatedAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    caption?: string;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    body?: string;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    tags?: string;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    status?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Product
     */
    categories?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof Product
     */
    price?: number;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    type?: ProductTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof Product
     */
    quantity?: number;
}

/**
* @export
* @enum {string}
*/
export enum ProductTypeEnum {
    Service = 'service',
    Product = 'product'
}

export function ProductFromJSON(json: any): Product {
    return ProductFromJSONTyped(json, false);
}

export function ProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): Product {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'publisherId': !exists(json, 'publisher_id') ? undefined : json['publisher_id'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'caption': !exists(json, 'caption') ? undefined : json['caption'],
        'body': !exists(json, 'body') ? undefined : json['body'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'categories': !exists(json, 'categories') ? undefined : json['categories'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
    };
}

export function ProductToJSON(value?: Product | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'publisher_id': value.publisherId,
        'created_at': value.createdAt,
        'updated_at': value.updatedAt,
        'title': value.title,
        'caption': value.caption,
        'body': value.body,
        'tags': value.tags,
        'status': value.status,
        'categories': value.categories,
        'price': value.price,
        'type': value.type,
        'quantity': value.quantity,
    };
}

